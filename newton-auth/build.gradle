plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'kotlin-android'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'

    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.9'
    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.10"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

apply plugin: 'maven-publish'


def getVersionName = { ->
    String version = new File("$projectDir/VERSION").text
    return version
}

def getArtifactId = { ->
    return "newton-auth"
}

publishing {
   repositories {
        maven {
            name = "newtonreleases"
            url = "https://nexus.newton-technology.ru/repository/maven-releases/"
            credentials {
                username = "$System.env.NEXUS_USERNAME"
                password = "$System.env.NEXUS_PASSWORD"
            }
        }
    }
    publications {
        maven2(MavenPublication) {
            groupId 'io.nwtn.newton-android-sdk'
            artifactId getArtifactId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtifactId()}-release.aar")
        }
    }
}

task updateVersion()  {
    doLast {
        new File(projectDir, "VERSION").text = System.getProperty("args")
    }
}
